@page "/addcourse"
@using AntDesign
@rendermode InteractiveServer
@inject NavigationManager NavigationManager
@inject HttpClient HttpClient
@inject CourseService CService

@using ExperienceMap.Data

  <!-- <div>
    @for (int i = 0; i < isChecked.Count; i++) {
    var local = i;
    <Checkbox @bind-Checked="isChecked[local]">
      @(names[local])    
    </Checkbox>
    }
    @if (isChecked[2]) {
      <p>the third one has been checked</p>
    }
  </div>
  -->
  
  <div style="overflow: scroll; height: 1000px; margin-bottom: 24px;">
    <GridRow>
      <GridCol Span="6">
    <Dropdown Trigger="@(new Trigger[] { Trigger.Click })">
      <Overlay>
          <Menu>
                @foreach (var course in allCourses) 
                {
                  <MenuDivider />
                  <MenuItem @onclick="@(() => addedCourses.Add(course))">
                    @course.ID
                  </MenuItem>
	  			      }
          </Menu>
      </Overlay>
      <ChildContent>
        <Button>
          <a class="ant-dropdown-link" @onclick:preventDefault style="text-decoration: none;">
                Courses <Icon Type="down"/>
          </a>
          </Button>
      </ChildContent>
    </Dropdown>
    </GridCol>

    <GridCol Span="18">
      
      <div style="overflow-wrap: break-word; padding: 16px">
        this is where it would show up
        @foreach (var crs in addedCourses) {
          <Collapse>
            <Panel Header="@crs.ID">
              <p>Skills for @crs.ID</p>
                <Collapse>
                  <Panel Header="Technical Skills">  
                @foreach (var skls in crs.Outcomes) {
                <p>@if(skls is SoftSkill) {
                    <Checkbox>@skls.ID</Checkbox>  
                  } else {
                    @skls.ID
                  } 
                  <br/>
                  </p>
                }
                  </Panel>
                </Collapse>
            </Panel>
          </Collapse>
        }  
      </div>
      <Button Type="@ButtonType.Primary" HtmlType="submit" @onclick='() => NavigationManager.NavigateTo("myskills")' style="position: relative; bottom: 0;">
          Submit
        </Button> 
    </GridCol>
    </GridRow>
  </div>

  
  @code{

    public List<string> names = new() {"oeb", "tro", "tree"};
    public List<bool> isChecked = new() {true, true, false};

    private List<Course> allCourses;

    private List<Course> addedCourses = [];

    protected override async Task OnInitializedAsync(){
      allCourses = await CService.GetCoursesAsync();
    }
}

  

  