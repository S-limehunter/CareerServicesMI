@page "/addcourse"
@using AntDesign
@rendermode InteractiveServer
@inject NavigationManager NavigationManager
@inject HttpClient HttpClient
@inject CourseService CService

@using ExperienceMap.Data

  <!-- <div>
    @for (int i = 0; i < isChecked.Count; i++) {
    var local = i;
    <Checkbox @bind-Checked="isChecked[local]">
      @(names[local])    
    </Checkbox>
    }
    @if (isChecked[2]) {
      <p>the third one has been checked</p>
    }
  </div>
  -->
  
  <div style="overflow: scroll; height: 1000px; margin-bottom: 24px;">
    <GridRow>
      <GridCol Span="8">
    <Dropdown Trigger="@(new Trigger[] { Trigger.Hover })">
      <Overlay>
          <Menu>
                <!-- for each type of program ... submenu -->
                @foreach (var degree in allDegrees){
                  <SubMenu Title=@(degree.ID)>
                  <!-- for each specialty .. menuitem -->
                    @foreach (var program in degree.Programs) {
                    <SubMenu Title=@(program.ID)>
                      @foreach (var term in program.Terms) {
                        <MenuItem @onclick='() => AddCourses(term)' style="position: relative; bottom: 0;">
                        @term.ID
                        </MenuItem>
                      }
                    </SubMenu>
                    }
                  </SubMenu>
                  }
          </Menu>
      </Overlay>
      <ChildContent>
        <Button>
          <a class="ant-dropdown-link" @onclick:preventDefault style="text-decoration: none;">
                Program of Study <Icon Type="down"/>
          </a>
          </Button>
      </ChildContent>
    </Dropdown>
    </GridCol>
    
    <GridCol Span="16">
      <div style="overflow-wrap: break-word; padding: 10px;">
        @foreach (var crs in addedCourses) {
          <Collapse>
            <Panel Header="@crs.ID">
              <p>Skills for @crs.ID</p>
                <Collapse>
                  <Panel Header="Technical Skills">  
                @foreach (var skls in crs.Outcomes) {
                <p>@skls.ID 
                  <br/>
                </p>
                }
                  </Panel>
                </Collapse>
            </Panel>
          </Collapse>
        } 
      </div>
    </GridCol>
    </GridRow>
  </div>

  
  @code{

    public List<string> names = new() {"oeb", "tro", "tree"};
    public List<bool> isChecked = new() {true, true, false};

    public List<string> programs = new() {"Marine Engineering", "Marine Environmental", "Marine Engineering Systems Design", "Nautical Science", "Naval Architecture", "Ocean Mapping", "Underwater Vehicles"};
    public List<string> degrees = new() {"Diploma of Technology", "Technician Diplomas", "Technical Certificates", "Bachelor Degrees", "Undergraduate Certificate", "Advanced Diplomas", "Post-Graduate Certificates", "Graduate Diplomas", "Master's Degrees", "Doctor of Philosophy (Ph.D)"};
    private List<Degree> allDegrees;

    private List<Course> addedCourses = [];

    public void AddCourses(Term term){
      addedCourses.AddRange(term.Courses);
    }

    protected override async Task OnInitializedAsync(){
      allDegrees = await CService.GetDegreesAsync();
    }
}

  

  